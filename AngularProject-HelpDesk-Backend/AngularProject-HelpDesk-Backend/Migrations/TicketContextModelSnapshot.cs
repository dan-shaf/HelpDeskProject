// <auto-generated />
using AngularProject_HelpDesk.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AngularProject_HelpDesk_Backend.Migrations
{
    [DbContext(typeof(TicketContext))]
    partial class TicketContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("AngularProject_HelpDesk.Models.Ticket", b =>
                {
                    // notes for given property
                    b.Property<int>("id")       // builder b has ID of property integer
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");  // verify input

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1); // sets this integer ID to equivalent Database ID
                    // this is useful to copy this database into another, example: a new database of all support personnel.
                    // shared vars from current database to new database: ID, status, userClosed.

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("favorite")
                        .HasColumnType("bit");

                    b.Property<string>("userName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("userClosed")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("userOpened")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Tickets");
                });
#pragma warning restore 612, 618
        }
    }
}
